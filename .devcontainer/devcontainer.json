{
	"name": "example .devcontainer",
	"dockerFile": "Dockerfile",
	"runArgs": ["--init"],
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	"overrideCommand": false,
	
	// "dockerComposeFile": ["../../docker-compose.yml"],
	// "service": "container-2",
  	// "shutdownAction": "none",
	// "workspaceFolder": "/workspace/test-next",

	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	// Converts LOCAL_WORKSPACE_FOLDER from windows path format to linux path format 
	// which is required to run docker-from-docker as it references the docker host's paths
	"postCreateCommand": "sudo bash ./.devcontainer/convert_path.sh ${LOCAL_WORKSPACE_FOLDER}",

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker"
	],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
